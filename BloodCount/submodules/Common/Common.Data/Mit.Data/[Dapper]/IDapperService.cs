using Dapper;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

namespace Common.Data
{
    public interface IDapperService
    {
        int Execute(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        int Execute(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<int> ExecuteAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<int> ExecuteAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IDataReader ExecuteReader(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IDataReader ExecuteReader(CommandDefinition command, CommandBehavior commandBehavior, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IDataReader ExecuteReader(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<DbDataReader> ExecuteReaderAsync(CommandDefinition command, DbConnection cnn = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IDataReader> ExecuteReaderAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<DbDataReader> ExecuteReaderAsync(CommandDefinition command, CommandBehavior commandBehavior, DbConnection cnn = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IDataReader> ExecuteReaderAsync(CommandDefinition command, CommandBehavior commandBehavior, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<DbDataReader> ExecuteReaderAsync(string sql, object? param = null, DbConnection cnn = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IDataReader> ExecuteReaderAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object ExecuteScalar(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object ExecuteScalar(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T ExecuteScalar<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T ExecuteScalar<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> ExecuteScalarAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> ExecuteScalarAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> ExecuteScalarAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> ExecuteScalarAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<object> Query(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<object> Query(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<T> Query<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<T> Query<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TReturn>(string sql, Func<TFirst, TSecond, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TFirst, TSecond, TThird, TReturn>(string sql, Func<TFirst, TSecond, TThird, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IEnumerable<TReturn> Query<TReturn>(string sql, Type[] types, Func<object[], TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<object>> QueryAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<object>> QueryAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<object>> QueryAsync(Type type, CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<object>> QueryAsync(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<T>> QueryAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<T>> QueryAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, Func<TFirst, TSecond, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TThird, TFourth, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, Func<TFirst, TSecond, TThird, TFourth, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(CommandDefinition command, Func<TFirst, TSecond, TThird, TReturn> map, IDbConnection? cnn = null, int? cnnType = null, string splitOn = "Id", [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, Func<TFirst, TSecond, TThird, TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<IEnumerable<TReturn>> QueryAsync<TReturn>(string sql, Type[] types, Func<object[], TReturn> map, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, bool buffered = true, string splitOn = "Id", int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QueryFirst(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QueryFirst(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QueryFirst<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QueryFirst<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstAsync(Type type, CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstAsync(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QueryFirstAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QueryFirstAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QueryFirstOrDefault(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QueryFirstOrDefault(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QueryFirstOrDefault<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QueryFirstOrDefault<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstOrDefaultAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstOrDefaultAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstOrDefaultAsync(Type type, CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QueryFirstOrDefaultAsync(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QueryFirstOrDefaultAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QueryFirstOrDefaultAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        SqlMapper.GridReader QueryMultiple(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        SqlMapper.GridReader QueryMultiple(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<SqlMapper.GridReader> QueryMultipleAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<SqlMapper.GridReader> QueryMultipleAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QuerySingle(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QuerySingle(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QuerySingle<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QuerySingle<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleAsync(Type type, CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleAsync(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QuerySingleAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QuerySingleAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QuerySingleOrDefault(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        object QuerySingleOrDefault(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QuerySingleOrDefault<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        T QuerySingleOrDefault<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleOrDefaultAsync(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleOrDefaultAsync(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleOrDefaultAsync(Type type, CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<object> QuerySingleOrDefaultAsync(Type type, string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QuerySingleOrDefaultAsync<T>(CommandDefinition command, IDbConnection? cnn = null, int? cnnType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        Task<T> QuerySingleOrDefaultAsync<T>(string sql, object? param = null, IDbConnection? cnn = null, int? cnnType = null, IDbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IAsyncEnumerable<object> QueryUnbufferedAsync(string sql, object? param = null, DbConnection cnn = null, DbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
        IAsyncEnumerable<T> QueryUnbufferedAsync<T>(string sql, object? param = null, DbConnection cnn = null, DbTransaction? transaction = null, int? commandTimeout = null, CommandType? commandType = null, [CallerMemberName] string memberName = "", [CallerFilePath] string filePath = "", [CallerLineNumber] int lineNumber = 0);
    }
}